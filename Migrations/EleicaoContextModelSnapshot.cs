// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace projeto_urnas_backend.Migrations
{
    [DbContext(typeof(EleicaoContext))]
    partial class EleicaoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Models.Configuracao.Candidato", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Eleicaoid")
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("Eleicaoid");

                    b.ToTable("Candidato");
                });

            modelBuilder.Entity("Models.Configuracao.Eleicao", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("nomeEleicao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Eleicoes");
                });

            modelBuilder.Entity("Models.Configuracao.Secao", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZonaEleitoralId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("quantidadeEleitores")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("ZonaEleitoralId");

                    b.ToTable("Secao");
                });

            modelBuilder.Entity("Models.Configuracao.ZonaEleitoral", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Eleicaoid")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("Eleicaoid");

                    b.ToTable("ZonaEleitoral");
                });

            modelBuilder.Entity("Models.Resultados.CandidatoResultado", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ResultadosEleicaoid")
                        .HasColumnType("TEXT");

                    b.Property<string>("nomeCandidato")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("quantidadeVotos")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("ResultadosEleicaoid");

                    b.ToTable("CandidatoResultado");
                });

            modelBuilder.Entity("Models.Resultados.ResultadosEleicao", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("idSecao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("idZonaEleitoral")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("quantidadePresentes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("votosValidos")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.ToTable("ResultadosEleicao");
                });

            modelBuilder.Entity("Models.Configuracao.Candidato", b =>
                {
                    b.HasOne("Models.Configuracao.Eleicao", null)
                        .WithMany("candidatos")
                        .HasForeignKey("Eleicaoid");
                });

            modelBuilder.Entity("Models.Configuracao.Secao", b =>
                {
                    b.HasOne("Models.Configuracao.ZonaEleitoral", null)
                        .WithMany("secoes")
                        .HasForeignKey("ZonaEleitoralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Configuracao.ZonaEleitoral", b =>
                {
                    b.HasOne("Models.Configuracao.Eleicao", null)
                        .WithMany("zonasEleitorais")
                        .HasForeignKey("Eleicaoid");
                });

            modelBuilder.Entity("Models.Resultados.CandidatoResultado", b =>
                {
                    b.HasOne("Models.Resultados.ResultadosEleicao", null)
                        .WithMany("candidatos")
                        .HasForeignKey("ResultadosEleicaoid");
                });

            modelBuilder.Entity("Models.Configuracao.Eleicao", b =>
                {
                    b.Navigation("candidatos");

                    b.Navigation("zonasEleitorais");
                });

            modelBuilder.Entity("Models.Configuracao.ZonaEleitoral", b =>
                {
                    b.Navigation("secoes");
                });

            modelBuilder.Entity("Models.Resultados.ResultadosEleicao", b =>
                {
                    b.Navigation("candidatos");
                });
#pragma warning restore 612, 618
        }
    }
}
